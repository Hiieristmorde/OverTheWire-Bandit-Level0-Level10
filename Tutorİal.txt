

 üìå------------Overview------------üìå

You will learn how to pass 0 to 10 the Bandit levels on OverTheWire. By doing so, you will understand the fundamentals of SSH.

üß∞-----------Requirements-------------üß∞

For Windows: Any SSH program will work, but it is recommended to use Cygwin64 Terminal. You can download it from: https://www.cygwin.com/

For Linux: You can simply use the Linux console for the SSH connection.

üìå------------LEVEL BY LEVEL------------üìå

LEVEL 0

Level goal: Connect to the Bandit server.
Host: bandit.labs.overthewire.org
Username: bandit0
Password: bandit0

Solution:

On the console type:
ssh bandit0@bandit.labs.overthewire.org -p 2220

Then the server will ask for the password; type: bandit0

Explanation:
We used ssh to connect to the host. bandit0 is the username, the hostname is bandit.labs.overthewire.org, and -p specifies the port number.


****************************************************************************************************************************************************


LEVEL 0 ‚Üí 1

Level goal: Find the password for the next level, which is in the readme file.

Solution:

On the console type:
ls
cat readme

The host will give you the password; copy it and then type exit.

Explanation:
We were already connected to the host, so we did not need to reconnect. ls lists files and cat reads the file contents.


****************************************************************************************************************************************************


LEVEL 1 ‚Üí 2

Level goal: Find the password in a file called -.
Host: bandit.labs.overthewire.org
Username: bandit1

Solution:

On the console type:
ssh bandit1@bandit.labs.overthewire.org -p 2220

If you want to see all files type:
ls -la

Type:
cat ./-

The host will give you the password.

Explanation:
The file name is -, which is normally interpreted as an option. By prefixing ./ we indicate that it is a filename, not a parameter.


****************************************************************************************************************************************************


LEVEL 2 ‚Üí 3

Level goal: Find the password in a file called spaces in this filename.
Host: bandit.labs.overthewire.org
Username: bandit2

Solution:

On the console type:
ssh bandit2@bandit.labs.overthewire.org -p 2220

If you want to see all files type:
ls -la

Type:
cat "spaces in this filename"

The host will give you the password.

Explanation:
File names containing spaces must be quoted (" ") or have spaces escaped.
Note: If the actual filename is --spaces in this filename--, use:
cat ./--spaces\ in\ this\ filename-- (or cat -- --spaces\ in\ this\ filename--) because names starting with -- can be parsed as options.


****************************************************************************************************************************************************


LEVEL 3 ‚Üí 4

Level goal: Find the password in a hidden file inside the inhere directory.
Host: bandit.labs.overthewire.org
Username: bandit3

Solution:

On the console type:
ssh bandit3@bandit.labs.overthewire.org -p 2220

If you want to see all files type:
ls -la

Type:
cd inhere/
ls -la
cat "...Hiding-From-You"

Copy the password.

Explanation:
Hidden files start with a dot (.). We listed files with ls -la, entered the inhere directory, and used cat on the hidden filename to read the password.


****************************************************************************************************************************************************


LEVEL 4 ‚Üí 5

Level goal: The password for the next level is stored in the only human-readable file in the inhere directory.
Host: bandit.labs.overthewire.org
Username: bandit4

Solution:

On the console type:
ssh bandit4@bandit.labs.overthewire.org -p 2220
ls -la
cd inhere/
ls -la
file ./*
cat ./-file07

Copy the password.

Explanation:
Use file to detect file types; the human-readable file will be shown as text (e.g., ‚ÄúASCII text‚Äù). Then use cat to read it.


****************************************************************************************************************************************************


LEVEL 5 ‚Üí 6

Level goal: The password is stored in a file somewhere under the inhere directory and has all of the following properties:

human-readable

1033 bytes in size

not executable

Host: bandit.labs.overthewire.org
Username: bandit5

Solution:

On the console type:
ssh bandit5@bandit.labs.overthewire.org -p 2220
ls -la
cd inhere/
ls -la
find . -type f -size 1033c ! -executable
cat ./maybehere07/.file2

Copy the password.

Explanation:
Use find with -type f, -size 1033c, and ! -executable to locate the file, then cat it.


****************************************************************************************************************************************************


LEVEL 6 ‚Üí 7

Level goal: The password is stored somewhere on the server in a file that:

is owned by user bandit7

is owned by group bandit6

is 33 bytes in size

Host: bandit.labs.overthewire.org
Username: bandit6

Solution:

On the console type:
ssh bandit6@bandit.labs.overthewire.org -p 2220
find / -user bandit7 -group bandit6 -size 33c 2>/dev/null
cat /var/lib/dpkg/info/bandit7.password

Copy the password.

Explanation:
Search the entire filesystem with find / using the given owner, group, and size. Redirect errors to /dev/null.


****************************************************************************************************************************************************


LEVEL 7 ‚Üí 8

Level goal: The password for the next level is stored in the file data.txt next to the word millionth.
Host: bandit.labs.overthewire.org
Username: bandit7

Solution:

On the console type:
ssh bandit7@bandit.labs.overthewire.org -p 2220
grep millionth data.txt

Copy the password.

Explanation:
grep searches for the word ‚Äúmillionth‚Äù in data.txt; the password is on the same line.


****************************************************************************************************************************************************


LEVEL 8 ‚Üí 9

Level goal: The password for the next level is stored in the file data.txt and is the only line of text that occurs once.
Host: bandit.labs.overthewire.org
Username: bandit8

Solution:

On the console type:
ssh bandit8@bandit.labs.overthewire.org -p 2220
cat data.txt | sort | uniq -u

Copy the password.

Explanation:
cat reads the file, sort arranges duplicate lines adjacent to each other, and uniq -u displays only lines that occur once.


****************************************************************************************************************************************************


LEVEL 9 ‚Üí 10

Level goal: The password for the next level is stored in the file data.txt in one of the human-readable strings, preceded by several = characters.
Host: bandit.labs.overthewire.org
Username: bandit9

Solution:

On the console type:
ssh bandit9@bandit.labs.overthewire.org -p 2220
strings data.txt

Copy the password.

Explanation:
strings shows printable strings from a (possibly binary) file. The password appears near many = characters.


****************************************************************************************************************************************************


LEVEL 10 ‚Üí 11

Level goal: The password for the next level is stored in the file data.txt, which contains Base64-encoded data.
Host: bandit.labs.overthewire.org
Username: bandit10

Solution:

On the console type:
ssh bandit10@bandit.labs.overthewire.org -p 2220
ls -la
base64 -d data.txt

Copy the password.

Explanation:
base64 -d data.txt decodes the Base64 content and reveals the password.


 
üìå------------Conclusion------------üìå

This guide covers Bandit levels 0 through 10, presenting step-by-step solutions and brief explanations of the commands and techniques used. It is designed to help you understand the fundamentals of SSH and basic Linux command-line tools frequently encountered in beginner-level wargames.


üìå------------What you learned------------üìå

How to connect to a remote host via SSH.

Basic file inspection and manipulation (ls, cat, file, strings, base64, etc.).

Searching and filtering techniques (grep, sort, uniq, find).

How to handle special filenames (spaces, dashes, hidden files).

Practical use of command pipelines and output redirection.